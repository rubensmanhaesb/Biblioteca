// <auto-generated />
using System;
using BibliotecaApp.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliotecaApp.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAs"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodAs");

                    b.HasIndex("CodAs")
                        .IsUnique();

                    b.ToTable("Assunto", "dbo");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CodAu");

                    b.HasIndex("CodAu")
                        .IsUnique();

                    b.ToTable("Autor", "dbo");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codl"));

                    b.Property<string>("AnoPublicacao")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Codl");

                    b.HasIndex("Codl")
                        .IsUnique();

                    b.ToTable("Livro", "dbo");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.LivroAssunto", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("int");

                    b.Property<int>("AssuntoCodAs")
                        .HasColumnType("int");

                    b.HasKey("LivroCodl", "AssuntoCodAs");

                    b.HasIndex("AssuntoCodAs");

                    b.HasIndex("LivroCodl");

                    b.ToTable("LivroAssunto", "dbo");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.LivroAutor", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("int");

                    b.Property<int>("AutorCodAu")
                        .HasColumnType("int");

                    b.HasKey("LivroCodl", "AutorCodAu");

                    b.HasIndex("AutorCodAu");

                    b.HasIndex("LivroCodl");

                    b.ToTable("LivroAutor", "dbo");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.PrecoLivro", b =>
                {
                    b.Property<int>("Codp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codp"));

                    b.Property<int>("LivroCodl")
                        .HasColumnType("int");

                    b.Property<int>("TipoCompra")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Codp");

                    b.HasIndex("LivroCodl");

                    b.ToTable("PrecoLivro", "dbo");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.LivroAssunto", b =>
                {
                    b.HasOne("BibliotecaApp.Domain.Entities.Assunto", "Assunto")
                        .WithMany("Livros")
                        .HasForeignKey("AssuntoCodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaApp.Domain.Entities.Livro", "Livro")
                        .WithMany("Assuntos")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.LivroAutor", b =>
                {
                    b.HasOne("BibliotecaApp.Domain.Entities.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorCodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaApp.Domain.Entities.Livro", "Livro")
                        .WithMany("Autores")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.PrecoLivro", b =>
                {
                    b.HasOne("BibliotecaApp.Domain.Entities.Livro", "Livro")
                        .WithMany("Precos")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.Assunto", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.Autor", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("BibliotecaApp.Domain.Entities.Livro", b =>
                {
                    b.Navigation("Assuntos");

                    b.Navigation("Autores");

                    b.Navigation("Precos");
                });
#pragma warning restore 612, 618
        }
    }
}
